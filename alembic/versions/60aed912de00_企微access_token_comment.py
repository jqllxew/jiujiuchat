"""企微access_token comment

Revision ID: 60aed912de00
Revises: e8888e676fe9
Create Date: 2025-07-04 16:21:50.140647

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '60aed912de00'
down_revision: Union[str, None] = 'e8888e676fe9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('qw_access_token', 'access_token',
               existing_type=sa.VARCHAR(),
               comment='企业微信Token',
               existing_nullable=False)
    op.alter_column('qw_access_token', 'expires_in',
               existing_type=sa.INTEGER(),
               comment='过期时长/s',
               existing_nullable=False)
    op.alter_column('qw_access_token', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='过期时间',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('qw_access_token', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='过期时间',
               existing_nullable=False)
    op.alter_column('qw_access_token', 'expires_in',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='过期时长/s',
               existing_nullable=False)
    op.alter_column('qw_access_token', 'access_token',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='企业微信Token',
               existing_nullable=False)
    # ### end Alembic commands ###
